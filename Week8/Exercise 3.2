{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Assignment 8.1\n",
    "# Exercise 3.2: Querying Using Concepts\n",
    "# Author: Saurabh Biswas\n",
    "# DSC550 T302"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "# Import important libraries\n",
    "import numpy as np\n",
    "from numpy import linalg as la"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Movie Rating Matrix: \n",
      " [[1 1 1 0 0]\n",
      " [3 3 3 0 0]\n",
      " [4 4 4 0 0]\n",
      " [5 5 5 0 0]\n",
      " [0 0 0 4 4]\n",
      " [0 0 0 5 5]\n",
      " [0 0 0 2 2]]\n",
      "\n",
      "U: \n",
      " [[0.14 0.  ]\n",
      " [0.42 0.  ]\n",
      " [0.56 0.  ]\n",
      " [0.7  0.  ]\n",
      " [0.   0.6 ]\n",
      " [0.   0.75]\n",
      " [0.   0.3 ]]\n",
      "\n",
      "SIGMA:\n",
      " [[12.4  0. ]\n",
      " [ 0.   9.5]]\n",
      "\n",
      "VT :\n",
      " [[0.58 0.58 0.58 0.   0.  ]\n",
      " [0.   0.   0.   0.71 0.71]]\n"
     ]
    }
   ],
   "source": [
    "# given data\n",
    "movie_rating_matrix = np.array([[1,1,1,0,0],[3,3,3,0,0],[4,4,4,0,0],[5,5,5,0,0],\n",
    "                                [0,0,0,4,4],[0,0,0,5,5],[0,0,0,2,2]])\n",
    "print('Movie Rating Matrix: \\n', movie_rating_matrix)\n",
    "\n",
    "U = np.array([[.14,0],[.42,0],[.56,0],[.70,0],[0,.60],[0,.75],[0,.30]])\n",
    "print('\\nU: \\n', U)\n",
    "\n",
    "sigma = np.array([[12.4,0],[0,9.5]])\n",
    "print('\\nSIGMA:\\n', sigma)\n",
    "\n",
    "VT = np.array([[.58,.58,.58,0,0],[0,0,0,.71,.71]])\n",
    "print('\\nVT :\\n', VT)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0.58, 0.  ],\n",
       "       [0.58, 0.  ],\n",
       "       [0.58, 0.  ],\n",
       "       [0.  , 0.71],\n",
       "       [0.  , 0.71]])"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "V = np.transpose(VT)  # get V from V(transpose)\n",
    "V"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 3, 0, 0, 4])"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Leslie rated 3 to Alien and 4 to Titanic\n",
    "leslie = np.array([0,3,0,0,4])  # representation of Leslie in movie rating matrix\n",
    "leslie"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([1.74, 2.84])"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# get concept space for Leslie \n",
    "qV = np.matmul(leslie, V)\n",
    "qV"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([1.0092, 1.0092, 1.0092, 2.0164, 2.0164])"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# get movie space for Leslie\n",
    "movie_space_Leslie = np.matmul(qV, VT)\n",
    "movie_space_Leslie"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As per movie space data for Leslie, she will like Titanic and Casablanca more than other three movies."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
